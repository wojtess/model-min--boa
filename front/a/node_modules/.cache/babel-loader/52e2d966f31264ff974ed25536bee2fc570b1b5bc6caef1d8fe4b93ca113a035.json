{"ast":null,"code":"import{useEffect,useRef,useContext}from\"react\";import{DataContext}from\"./DataContext\";const DataSender=()=>{const{dataToSend}=useContext(DataContext);const intervalRef=useRef(null);const dataRef=useRef(dataToSend);// Update the reference whenever the data changes\nuseEffect(()=>{dataRef.current=dataToSend;},[dataToSend]);useEffect(()=>{// Function to send data\nconst sendData=async()=>{try{const response=await fetch(\"http://192.168.4.1/api/v1/controls\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(dataRef.current)// Use the latest data\n});if(!response.ok){console.error(\"Error sending data:\",response.statusText);}}catch(error){console.error(\"Network error:\",error);}};// Start the interval\nintervalRef.current=setInterval(()=>{sendData();},100);// Cleanup function\nreturn()=>clearInterval(intervalRef.current);},[]);// Empty dependency ensures this runs only once\n};export default DataSender;","map":{"version":3,"names":["useEffect","useRef","useContext","DataContext","DataSender","dataToSend","intervalRef","dataRef","current","sendData","response","fetch","method","headers","body","JSON","stringify","ok","console","error","statusText","setInterval","clearInterval"],"sources":["/home/wojtess/Documents/programing/esp32/powertrain/model2/front/a/src/DataSender.js"],"sourcesContent":["import { useEffect, useRef, useContext } from \"react\";\nimport { DataContext } from \"./DataContext\";\n\nconst DataSender = () => {\n  const { dataToSend } = useContext(DataContext);\n  const intervalRef = useRef(null);\n  const dataRef = useRef(dataToSend);\n\n  // Update the reference whenever the data changes\n  useEffect(() => {\n    dataRef.current = dataToSend;\n  }, [dataToSend]);\n\n  useEffect(() => {\n    // Function to send data\n    const sendData = async () => {\n      try {\n        const response = await fetch(\"http://192.168.4.1/api/v1/controls\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify(dataRef.current), // Use the latest data\n        });\n        if (!response.ok) {\n          console.error(\"Error sending data:\", response.statusText);\n        }\n      } catch (error) {\n        console.error(\"Network error:\", error);\n      }\n    };\n\n    // Start the interval\n    intervalRef.current = setInterval(() => {\n      sendData();\n    }, 100);\n\n    // Cleanup function\n    return () => clearInterval(intervalRef.current);\n  }, []); // Empty dependency ensures this runs only once\n};\n\nexport default DataSender;\n"],"mappings":"AAAA,OAASA,SAAS,CAAEC,MAAM,CAAEC,UAAU,KAAQ,OAAO,CACrD,OAASC,WAAW,KAAQ,eAAe,CAE3C,KAAM,CAAAC,UAAU,CAAGA,CAAA,GAAM,CACvB,KAAM,CAAEC,UAAW,CAAC,CAAGH,UAAU,CAACC,WAAW,CAAC,CAC9C,KAAM,CAAAG,WAAW,CAAGL,MAAM,CAAC,IAAI,CAAC,CAChC,KAAM,CAAAM,OAAO,CAAGN,MAAM,CAACI,UAAU,CAAC,CAElC;AACAL,SAAS,CAAC,IAAM,CACdO,OAAO,CAACC,OAAO,CAAGH,UAAU,CAC9B,CAAC,CAAE,CAACA,UAAU,CAAC,CAAC,CAEhBL,SAAS,CAAC,IAAM,CACd;AACA,KAAM,CAAAS,QAAQ,CAAG,KAAAA,CAAA,GAAY,CAC3B,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,oCAAoC,CAAE,CACjEC,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAACT,OAAO,CAACC,OAAO,CAAG;AACzC,CAAC,CAAC,CACF,GAAI,CAACE,QAAQ,CAACO,EAAE,CAAE,CAChBC,OAAO,CAACC,KAAK,CAAC,qBAAqB,CAAET,QAAQ,CAACU,UAAU,CAAC,CAC3D,CACF,CAAE,MAAOD,KAAK,CAAE,CACdD,OAAO,CAACC,KAAK,CAAC,gBAAgB,CAAEA,KAAK,CAAC,CACxC,CACF,CAAC,CAED;AACAb,WAAW,CAACE,OAAO,CAAGa,WAAW,CAAC,IAAM,CACtCZ,QAAQ,CAAC,CAAC,CACZ,CAAC,CAAE,GAAG,CAAC,CAEP;AACA,MAAO,IAAMa,aAAa,CAAChB,WAAW,CAACE,OAAO,CAAC,CACjD,CAAC,CAAE,EAAE,CAAC,CAAE;AACV,CAAC,CAED,cAAe,CAAAJ,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}