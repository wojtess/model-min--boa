{"ast":null,"code":"var _jsxFileName = \"/home/jedrek/Powertrain/miniboat-website/src/Fullscreen.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useContext } from \"react\";\nimport { IsFullscreenContext } from \"./IsFullscreenContext\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Fullscreen = () => {\n  _s();\n  const {\n    fullscreenData,\n    setFullscreenData\n  } = useContext(IsFullscreenContext);\n  const openFullscreen = () => {\n    const elem = document.documentElement;\n    if (elem.requestFullscreen) {\n      elem.requestFullscreen();\n    } else if (elem.webkitRequestFullscreen) {\n      elem.webkitRequestFullscreen(); // Safari\n    } else if (elem.msRequestFullscreen) {\n      elem.msRequestFullscreen(); // IE11\n    }\n    setFullscreenData(false);\n  };\n  useEffect(() => {\n    const handleFullscreenChange = () => {\n      if (!document.fullscreenElement) {\n        console.log(\"Exited fullscreen\");\n        // Call your function here\n        setFullscreenData(true);\n      }\n    };\n    document.addEventListener(\"fullscreenchange\", handleFullscreenChange);\n\n    // Cleanup on unmount\n    return () => {\n      document.removeEventListener(\"fullscreenchange\", handleFullscreenChange);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: fullscreenData && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: openFullscreen,\n        className: \"save-color-input\",\n        children: \"FULL\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 35\n    }, this)\n  }, void 0, false);\n};\n_s(Fullscreen, \"KZaR4TZ0nQIta5XjWisGNO8ropQ=\");\n_c = Fullscreen;\nexport default Fullscreen;\nvar _c;\n$RefreshReg$(_c, \"Fullscreen\");","map":{"version":3,"names":["useState","useEffect","useContext","IsFullscreenContext","jsxDEV","_jsxDEV","Fragment","_Fragment","Fullscreen","_s","fullscreenData","setFullscreenData","openFullscreen","elem","document","documentElement","requestFullscreen","webkitRequestFullscreen","msRequestFullscreen","handleFullscreenChange","fullscreenElement","console","log","addEventListener","removeEventListener","children","onClick","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/jedrek/Powertrain/miniboat-website/src/Fullscreen.js"],"sourcesContent":["import { useState, useEffect, useContext } from \"react\"\nimport { IsFullscreenContext } from \"./IsFullscreenContext\";\n\nconst Fullscreen = () => {\n\n    const { fullscreenData, setFullscreenData }= useContext(IsFullscreenContext);\n\n    const openFullscreen = () => {\n      const elem = document.documentElement;\n      if (elem.requestFullscreen) {\n        elem.requestFullscreen();\n      } else if (elem.webkitRequestFullscreen) {\n        elem.webkitRequestFullscreen(); // Safari\n      } else if (elem.msRequestFullscreen) {\n        elem.msRequestFullscreen(); // IE11\n      }\n      setFullscreenData(false);\n    };\n\n    useEffect(() => {\n        const handleFullscreenChange = () => {\n          if (!document.fullscreenElement) {\n            console.log(\"Exited fullscreen\");\n            // Call your function here\n            setFullscreenData(true);\n          }\n        };\n    \n        document.addEventListener(\"fullscreenchange\", handleFullscreenChange);\n    \n        // Cleanup on unmount\n        return () => {\n          document.removeEventListener(\"fullscreenchange\", handleFullscreenChange);\n        };\n      }, []);\n\n    return (<>{fullscreenData && (<div>\n        <button onClick={openFullscreen} className=\"save-color-input\">FULL</button>\n        </div>)}</>   \n    );\n  };\n\n  export default Fullscreen;"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AACvD,SAASC,mBAAmB,QAAQ,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE5D,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAErB,MAAM;IAAEC,cAAc;IAAEC;EAAkB,CAAC,GAAET,UAAU,CAACC,mBAAmB,CAAC;EAE5E,MAAMS,cAAc,GAAGA,CAAA,KAAM;IAC3B,MAAMC,IAAI,GAAGC,QAAQ,CAACC,eAAe;IACrC,IAAIF,IAAI,CAACG,iBAAiB,EAAE;MAC1BH,IAAI,CAACG,iBAAiB,CAAC,CAAC;IAC1B,CAAC,MAAM,IAAIH,IAAI,CAACI,uBAAuB,EAAE;MACvCJ,IAAI,CAACI,uBAAuB,CAAC,CAAC,CAAC,CAAC;IAClC,CAAC,MAAM,IAAIJ,IAAI,CAACK,mBAAmB,EAAE;MACnCL,IAAI,CAACK,mBAAmB,CAAC,CAAC,CAAC,CAAC;IAC9B;IACAP,iBAAiB,CAAC,KAAK,CAAC;EAC1B,CAAC;EAEDV,SAAS,CAAC,MAAM;IACZ,MAAMkB,sBAAsB,GAAGA,CAAA,KAAM;MACnC,IAAI,CAACL,QAAQ,CAACM,iBAAiB,EAAE;QAC/BC,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;QAChC;QACAX,iBAAiB,CAAC,IAAI,CAAC;MACzB;IACF,CAAC;IAEDG,QAAQ,CAACS,gBAAgB,CAAC,kBAAkB,EAAEJ,sBAAsB,CAAC;;IAErE;IACA,OAAO,MAAM;MACXL,QAAQ,CAACU,mBAAmB,CAAC,kBAAkB,EAAEL,sBAAsB,CAAC;IAC1E,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAER,oBAAQd,OAAA,CAAAE,SAAA;IAAAkB,QAAA,EAAGf,cAAc,iBAAKL,OAAA;MAAAoB,QAAA,eAC1BpB,OAAA;QAAQqB,OAAO,EAAEd,cAAe;QAACe,SAAS,EAAC,kBAAkB;QAAAF,QAAA,EAAC;MAAI;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtE;EAAE,gBAAG,CAAC;AAEjB,CAAC;AAACtB,EAAA,CArCED,UAAU;AAAAwB,EAAA,GAAVxB,UAAU;AAuCd,eAAeA,UAAU;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}